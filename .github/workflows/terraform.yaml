name: "Terraform"

on:
  push:
    branches:
      - "main"
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    container: cytopia/terragrunt
    environment: production
    env:
      TERRAFORM_MODULE_CATALOGUE_TAG: ${{ secrets.TERRAFORM_MODULE_CATALOGUE_TAG }}
      TERRAFORM_TOKEN: ${{ secrets.TERRAFORM_TOKEN}}
      API_TOKEN: ${{secrets.API_TOKEN}}

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
  
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terragrunt Init
        # uses: docker://alpine/terragrunt:1.2.6
        run: /usr/bin/terragrunt init

      # Checks that all Terraform configuration files adhere to a canonical format
      - name: Terragrunt Format
        run: /usr/bin/terragrunt hclfmt 
      - name: "Add GitHub to the SSH known hosts file"
        run:  mkdir ~/.ssh && echo -e "|github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl.\n github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==.\n github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=">> ~/.ssh/known_hosts

      # Generates an execution plan for Terraform
      - name: Terragrunt Plan
        run: /usr/bin/terragrunt run-all plan

        # On push to "main", build or change infrastructure according to Terraform configuration files
        # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
      - name: Terraform Apply
        if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
        run: /usr/bin/terragrunt run-all apply -auto-approve -input=false
